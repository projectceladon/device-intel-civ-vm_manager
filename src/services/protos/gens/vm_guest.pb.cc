// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vm_guest.proto

#include "vm_guest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace vm_manager {
constexpr AppLaunchRequest::AppLaunchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , disp_id_(0u){}
struct AppLaunchRequestDefaultTypeInternal {
  constexpr AppLaunchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppLaunchRequestDefaultTypeInternal() {}
  union {
    AppLaunchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppLaunchRequestDefaultTypeInternal _AppLaunchRequest_default_instance_;
constexpr AppLaunchResponse::AppLaunchResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(0)

  , code_(0){}
struct AppLaunchResponseDefaultTypeInternal {
  constexpr AppLaunchResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppLaunchResponseDefaultTypeInternal() {}
  union {
    AppLaunchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppLaunchResponseDefaultTypeInternal _AppLaunchResponse_default_instance_;
}  // namespace vm_manager
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_vm_5fguest_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_vm_5fguest_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_vm_5fguest_2eproto = nullptr;

const uint32_t TableStruct_vm_5fguest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vm_manager::AppLaunchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vm_manager::AppLaunchRequest, app_name_),
  PROTOBUF_FIELD_OFFSET(::vm_manager::AppLaunchRequest, disp_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vm_manager::AppLaunchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vm_manager::AppLaunchResponse, status_),
  PROTOBUF_FIELD_OFFSET(::vm_manager::AppLaunchResponse, code_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::vm_manager::AppLaunchRequest)},
  { 8, -1, -1, sizeof(::vm_manager::AppLaunchResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vm_manager::_AppLaunchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vm_manager::_AppLaunchResponse_default_instance_),
};

const char descriptor_table_protodef_vm_5fguest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016vm_guest.proto\022\nvm_manager\032\014common.pro"
  "to\"5\n\020AppLaunchRequest\022\020\n\010app_name\030\001 \001(\t"
  "\022\017\n\007disp_id\030\002 \001(\r\"H\n\021AppLaunchResponse\022%"
  "\n\006status\030\001 \001(\0162\025.vm_manager.AppStatus\022\014\n"
  "\004code\030\002 \001(\021*>\n\tAppStatus\022\013\n\007UNKNOWN\020\000\022\014\n"
  "\010LAUNCHED\020\001\022\n\n\006EXITED\020\002\022\n\n\006FAILED\020\0032M\n\013C"
  "ivPowerCtl\022>\n\010Shutdown\022\030.vm_manager.Empt"
  "yMessage\032\030.vm_manager.EmptyMessage2Z\n\016Ci"
  "vAppLauncher\022H\n\tLaunchApp\022\034.vm_manager.A"
  "ppLaunchRequest\032\035.vm_manager.AppLaunchRe"
  "sponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_vm_5fguest_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_vm_5fguest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_vm_5fguest_2eproto = {
  false, false, 414, descriptor_table_protodef_vm_5fguest_2eproto, "vm_guest.proto", 
  &descriptor_table_vm_5fguest_2eproto_once, descriptor_table_vm_5fguest_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_vm_5fguest_2eproto::offsets,
  file_level_metadata_vm_5fguest_2eproto, file_level_enum_descriptors_vm_5fguest_2eproto, file_level_service_descriptors_vm_5fguest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_vm_5fguest_2eproto_getter() {
  return &descriptor_table_vm_5fguest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_vm_5fguest_2eproto(&descriptor_table_vm_5fguest_2eproto);
namespace vm_manager {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AppStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vm_5fguest_2eproto);
  return file_level_enum_descriptors_vm_5fguest_2eproto[0];
}
bool AppStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class AppLaunchRequest::_Internal {
 public:
};

AppLaunchRequest::AppLaunchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:vm_manager.AppLaunchRequest)
}
AppLaunchRequest::AppLaunchRequest(const AppLaunchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_name().empty()) {
    app_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_name(), 
      GetArenaForAllocation());
  }
  disp_id_ = from.disp_id_;
  // @@protoc_insertion_point(copy_constructor:vm_manager.AppLaunchRequest)
}

inline void AppLaunchRequest::SharedCtor() {
app_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
disp_id_ = 0u;
}

AppLaunchRequest::~AppLaunchRequest() {
  // @@protoc_insertion_point(destructor:vm_manager.AppLaunchRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AppLaunchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  app_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AppLaunchRequest::ArenaDtor(void* object) {
  AppLaunchRequest* _this = reinterpret_cast< AppLaunchRequest* >(object);
  (void)_this;
}
void AppLaunchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppLaunchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AppLaunchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vm_manager.AppLaunchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_name_.ClearToEmpty();
  disp_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppLaunchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vm_manager.AppLaunchRequest.app_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 disp_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          disp_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppLaunchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vm_manager.AppLaunchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_name = 1;
  if (!this->_internal_app_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_name().data(), static_cast<int>(this->_internal_app_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vm_manager.AppLaunchRequest.app_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_name(), target);
  }

  // uint32 disp_id = 2;
  if (this->_internal_disp_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_disp_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vm_manager.AppLaunchRequest)
  return target;
}

size_t AppLaunchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vm_manager.AppLaunchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_name = 1;
  if (!this->_internal_app_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_name());
  }

  // uint32 disp_id = 2;
  if (this->_internal_disp_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_disp_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppLaunchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AppLaunchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppLaunchRequest::GetClassData() const { return &_class_data_; }

void AppLaunchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AppLaunchRequest *>(to)->MergeFrom(
      static_cast<const AppLaunchRequest &>(from));
}


void AppLaunchRequest::MergeFrom(const AppLaunchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vm_manager.AppLaunchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_name().empty()) {
    _internal_set_app_name(from._internal_app_name());
  }
  if (from._internal_disp_id() != 0) {
    _internal_set_disp_id(from._internal_disp_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppLaunchRequest::CopyFrom(const AppLaunchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vm_manager.AppLaunchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppLaunchRequest::IsInitialized() const {
  return true;
}

void AppLaunchRequest::InternalSwap(AppLaunchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_name_, lhs_arena,
      &other->app_name_, rhs_arena
  );
  swap(disp_id_, other->disp_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppLaunchRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_vm_5fguest_2eproto_getter, &descriptor_table_vm_5fguest_2eproto_once,
      file_level_metadata_vm_5fguest_2eproto[0]);
}

// ===================================================================

class AppLaunchResponse::_Internal {
 public:
};

AppLaunchResponse::AppLaunchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:vm_manager.AppLaunchResponse)
}
AppLaunchResponse::AppLaunchResponse(const AppLaunchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&status_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:vm_manager.AppLaunchResponse)
}

inline void AppLaunchResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&status_)) + sizeof(code_));
}

AppLaunchResponse::~AppLaunchResponse() {
  // @@protoc_insertion_point(destructor:vm_manager.AppLaunchResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AppLaunchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppLaunchResponse::ArenaDtor(void* object) {
  AppLaunchResponse* _this = reinterpret_cast< AppLaunchResponse* >(object);
  (void)_this;
}
void AppLaunchResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppLaunchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AppLaunchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vm_manager.AppLaunchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&status_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppLaunchResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .vm_manager.AppStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::vm_manager::AppStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // sint32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppLaunchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vm_manager.AppLaunchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .vm_manager.AppStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // sint32 code = 2;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vm_manager.AppLaunchResponse)
  return target;
}

size_t AppLaunchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vm_manager.AppLaunchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vm_manager.AppStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // sint32 code = 2;
  if (this->_internal_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppLaunchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AppLaunchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppLaunchResponse::GetClassData() const { return &_class_data_; }

void AppLaunchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AppLaunchResponse *>(to)->MergeFrom(
      static_cast<const AppLaunchResponse &>(from));
}


void AppLaunchResponse::MergeFrom(const AppLaunchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vm_manager.AppLaunchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppLaunchResponse::CopyFrom(const AppLaunchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vm_manager.AppLaunchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppLaunchResponse::IsInitialized() const {
  return true;
}

void AppLaunchResponse::InternalSwap(AppLaunchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppLaunchResponse, code_)
      + sizeof(AppLaunchResponse::code_)
      - PROTOBUF_FIELD_OFFSET(AppLaunchResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppLaunchResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_vm_5fguest_2eproto_getter, &descriptor_table_vm_5fguest_2eproto_once,
      file_level_metadata_vm_5fguest_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace vm_manager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::vm_manager::AppLaunchRequest* Arena::CreateMaybeMessage< ::vm_manager::AppLaunchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vm_manager::AppLaunchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::vm_manager::AppLaunchResponse* Arena::CreateMaybeMessage< ::vm_manager::AppLaunchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vm_manager::AppLaunchResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
